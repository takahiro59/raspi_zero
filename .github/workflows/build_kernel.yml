name: Build kernel
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: 
      contents: write
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt update && sudo apt install git bc bison flex libssl-dev make libc6-dev libncurses5-dev clang llvm lld crossbuild-essential-arm64 
      - run: git clone --depth 1 -b rpi-6.9.y https://github.com/raspberrypi/linux
      - run: |
          cd linux
          make clean
          curl -L https://github.com/doronz88/pymobiledevice3/files/13638682/idevice_debug_ncm.patch | patch -p1
          curl -L https://cdn.kernel.org/pub/linux/kernel/projects/rt/6.9/patch-6.9-rc2-rt1.patch.gz | zcat | patch -p1 -N
          make bcm2711_defconfig
          ./scripts/config --set-val USB_IDEVICE_DEBUG_NCM m
          ./scripts/config --set-val CONFIG_LTO_CLANG_THIN y
          ./scripts/config --set-val CONFIG_MODULE_COMPRESS_ZSTD y
          ./scripts/config --set-val CONFIG_ZSWAP_DEFAULT_ON y
          ./scripts/config --set-val CONFIG_ZSTD_COMPRESS y
          ./scripts/config --set-val CONFIG_ZSTD_DECOMPRESS y
          ./scripts/config --set-val PREEMPT_RT y
          cat .config | grep USB_IDEVICE_DEBUG_NCM
          make -j6 Image.zst modules dtbs
          mkdir -p ~/rtkernel/boot/firmware/overlays
          make INSTALL_MOD_PATH=~/rtkernel modules_install
          cp -r arch/arm64/boot/Image ~/rtkernel/boot/firmware/$KERNEL.img
          cp arch/arm64/boot/dts/broadcom/*.dtb ~/rtkernel/boot/firmware/
          cp arch/arm64/boot/dts/overlays/*.dtb* ~/rtkernel/boot/firmware/overlays/
        env: 
          KERNEL: kernel8
          LOCALVERSION: -dev
          ARCH: arm64
          CROSS_COMPILE: aarch64-linux-gnu-
          KCFLAGS: -pipe -O2 -march=armv8-a+fp+simd
          LLVM: 1

      - run: |
          cd ~/rtkernel/
          tar -cf - boot/ lib/ | zstd --ultra -22 -T0 > linux.tzst
      - run: gh release create linux-arm64 linux.tzst
        env: 
          GH_TOKEN: ${{ github.token }}
